#!/usr/bin/python2

import unittest
import sys, os
sys.path.append(os.path.join(os.path.dirname(sys.argv[0]), '..'))
from base import *

class TestCase(GhostTestCase):
	def do_testcase(self):
		self.help_login(username='crowbar')
		assert "<h3>openstack</h3>" in self.ghost.content
		self.ghost.click("a[href*='instances']", expect_loading=True)
		if "jeos_cycle" in self.ghost.content:
			exit_skipped("jeos_cycle already existing")

		for r in range(0, config['CYCLE_COUNT']):
			self.ghost.click("a[href*='images']", expect_loading=True)
			image_id = re.search(r"/([^/]*)/\"[^>]*>jeos1<", self.ghost.content, re.M).group(1)
			self.ghost.click("a#images__row_%s__action_launch_image" % image_id)
			self.ghost.wait_for_selector("input[type=submit][value='Launch']") # ajax loading
			fixed_network_id = re.search(r">fixed<em [^>]*>\(([\w-]*)\)<", self.ghost.content, re.M).group(1)
			self.ghost.fill("form[action*='launch']", {
				"name": "jeos_cycle"
			})
			self.ghost.click("a[href*='launch_instance__setnetworkaction']")
			self.ghost.click("li[name='%s'] a.btn" % fixed_network_id)
			self.ghost.fire_on("form[action*='launch']", "submit", expect_loading=True)[0]
			assert 'Launched instance named "jeos_cycle".' in self.ghost.content
			instance_id = re.search(r"/([^/]*)/\"[^>]*>jeos_cycle<", self.ghost.content, re.M).group(1)
			self.help_wait_instance_active(instance_id)

			self.ghost.click("button[value='instances__terminate__%s']" % instance_id)
			assert "Confirm Terminate Instance" in self.ghost.content
			self.ghost.click("div.modal-footer a.btn-primary", expect_loading=True)
			assert 'Scheduled termination of Instance: jeos_cycle' in self.ghost.content
			self.help_wait_instance_gone(instance_id)

if __name__ == '__main__':
	del GhostTestCase
	unittest.main()
